{"version":3,"sources":["colorScheme.js","components/HeaderSection.jsx","components/MoviePoster.jsx","components/MovieShowCase.jsx","components/MovieInfoCard.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["createContext","HeaderSection","props","useContext","themeContext","theme","changeTheme","useState","menu","setMenu","window","innerWidth","windowSize","setSize","addEventListener","className","variant","style","height","onClick","home","type","name","autoComplete","value","search","onChange","data-type","MoviePoster","colorScheme","id","src","poster","alt","title","substring","plot","rating","MovieShowCase","uri","movies","setMovies","trim","process","page","useEffect","fetch","then","res","json","data","results","catch","err","rst","undefined","length","map","movie","index","poster_path","overview","vote_average","CircularProgress","MovieInfoCard","setRst","chosen","Math","floor","runtime","App","localStorage","getItem","setItem","setTheme","stcicky","setSticky","details","setDetails","setChosen","setSearch","setType","setPage","Details","e","target","classList","contains","dataset","pageYOffset","document","showcase","querySelector","scrollY","innerHeight","clientHeight","Provider","scrollTo","CSSTransition","in","unmountOnExit","timeout","classNames","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c225d962.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport default createContext()","/* eslint-disable eqeqeq */\nimport React, { useContext, useState } from 'react'\n\n//component style\nimport \"./headerSection.css\"\n\n//theme context\nimport  themeContext from '../colorScheme'\n\n// Mui componenets\nimport TheatersIcon from '@material-ui/icons/Theaters';\nimport LiveTvIcon from '@material-ui/icons/LiveTv';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nexport default function HeaderSection(props) {\n\n    const {theme,changeTheme} = useContext(themeContext)\n\n    //dropDown menu and window size\n\n\n\n    const [menu,setMenu] = useState(false)\n    const [windowSize,setSize] = useState(window.innerWidth<600)\n\n    const dropMenu = ()=>{\n        setMenu(!menu)\n    }\n\n    window.addEventListener(\"resize\",()=>{\n        if(window.innerWidth<600){\n            setSize(true)\n        }else{\n            setSize(false)\n        }\n    })\n\n    \n\n    \n    return (\n\n        <div className={\"header-container \"+props.variant+\" edge-\"+theme} \n        style={{height:windowSize? (menu? \"150px\":\"40px\"):\"auto\" }} \n        >\n            <div className=\"header-logo\" >\n                <h1 onClick={props.home} >the movie hall</h1>\n                <MenuIcon className=\"phoneMenu\" onClick={dropMenu} />\n            </div>\n            <div className=\"header-search-box\" >\n                <input className={\"search-box \"+theme} type=\"text\" \n                name=\"search\" autoComplete=\"off\" \n                value={props.search}\n                onChange={props.onChange}\n                />                \n            </div>\n            <div className=\"header-actions\" >\n                <button \n                type=\"button\" className=\"content-type\"  onClick={props.onClick} \n                data-type=\"movie\"\n                >\n                    <TheatersIcon data-type=\"movie\" className={props.type==\"movie\"?\"active\":\"\"} />\n                </button>\n\n                <button \n                type=\"button\" className=\"content-type\"  onClick={props.onClick}\n                data-type=\"tv\"\n                >\n                    <LiveTvIcon data-type=\"tv\" className={props.type==\"tv\"?\"active\":\"\"}/>\n                </button>\n\n                <button \n                type=\"button\" className=\"theme\" onClick={changeTheme}>\n                    <Brightness4Icon />\n                </button>\n            </div>\n        </div>\n    )\n}\n","/* eslint-disable no-unused-vars */\nimport React ,{useContext} from 'react'\n\n\nimport colorScheme from \"../colorScheme\"\n\n//component style\nimport \"./moviePoster.css\"\n\nexport default function MoviePoster(props) {\n\n    const {theme,changeTheme} = useContext(colorScheme)\n\n    \n\n    return (\n        <div className=\"poster\" onClick={props.onClick} >\n            <div className={\"poster-container poster-\"+theme} id={props.id} data-type={props.type} >\n                <span></span>\n                <span></span>\n                <span></span>\n                <span></span>\n\n                <img src={props.poster} alt=\"Poster\"/>\n                <h3 title={props.title}> {props.title && props.title.substring(0,50)} </h3>\n                <p className=\"poster-overview\"> {props.plot && props.plot.substring(0,100)+\"...\"} </p>\n                <p> {props.rating} </p>\n            </div>\n        </div>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport React, { useEffect, useState } from 'react'\n\n\n//component style\nimport \"./movieShowCase.css\"\n\n\n//custom componenets\nimport MoviePoster from \"./MoviePoster\"\n\n//mui\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nexport default function MovieShowCase(props) {\n\n    const [movies,setMovies] = useState([])\n\n    let uri;\n\n\n    if(props.search.trim() == \"\"){\n        uri = `https://api.themoviedb.org/3/${props.type}/popular?api_key=${process.env.REACT_APP_TMDB_API_KEY}&page=${props.page}`\n    }else{\n        uri= `https://api.themoviedb.org/3/search/${props.type}?api_key=${process.env.REACT_APP_TMDB_API_KEY}&page=${props.page}&query=${props.search}&include_adult=true`\n    }\n\n    useEffect(()=> {\n        fetch(uri)\n        .then(res =>res.json())\n        .then(data => {\n            if(props.page!=1)\n            setMovies([...movies,...data.results])\n            else\n            setMovies(data.results)\n        })\n        .catch(err => {throw err})\n    },[uri])\n\n\n    const rst = (movies != undefined && movies.length) ? movies.map((movie,index) =>{\n        return (\n            <MoviePoster \n                key={movie.id*index} id={movie.id} type={props.type}\n                poster={movie.poster_path!=null?`http://image.tmdb.org/t/p/w185/${movie.poster_path}`:\"/img/not-found.jpg\"}\n                title={props.type ==\"movie\" ? movie.title:movie.name}\n                plot={movie.overview}\n                rating={movie.vote_average}\n                onClick={props.onClick}\n            />\n        )\n    }):<CircularProgress />\n\n    return (\n        <div className=\"showcase\" >\n            {rst}\n        </div>\n    )\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable eqeqeq */\nimport React, { useEffect, useState } from 'react'\nimport \"./movieInfoCard.css\"\n\n\n\n\n\n//mui icons\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\nimport StarIcon from '@material-ui/icons/Star';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nexport default function MovieInfoCard(props) {\n\n    const [rst,setRst] = useState({})\n\n    useEffect(()=>{\n        let uri = `https://api.themoviedb.org/3/${props.chosen.type}/${props.chosen.id}?api_key=31642b090ec00df20ba0fb96c43db571`\n\n        fetch(uri)\n        .then(res =>res.json())\n        .then(data => setRst(data))\n        .catch(err => {throw err})\n    },[])\n    \n    return (\n        <div className=\"movieDetails\" >\n                <div className=\"infoPoster\">\n                    <ArrowBackIcon onClick={props.onClick} />\n                    <img src={`http://image.tmdb.org/t/p/w185/${rst.poster_path}`} alt=\"poster\" ></img>\n                </div>\n                <div className=\"infoDetails\">\n                    <h3> {rst.title || rst.name} </h3>\n                    <span><QueryBuilderIcon/> \n                    {props.chosen.type==\"movie\"? `${Math.floor(rst.runtime/60)}h ${rst.runtime%60}min` : \"N/A\"} \n                    </span>\n                    <span><StarIcon /> {rst.vote_average} </span>\n                </div>\n\n                <div className=\"infoPlot\">\n                    <p>\n                        {rst.overview}\n                    </p>\n                </div>\n        </div>\n    )\n}\n","/* eslint-disable eqeqeq */\nimport React , { useState} from 'react'\n\n//colorScheme Context\nimport themeContext from \"./colorScheme\"\n\n//component style\nimport \"./app.css\"\n\n//custom componenets\nimport HeaderSection from \"./components/HeaderSection\"\nimport MovieShowCase from \"./components/MovieShowCase\"\nimport MovieInfoCard from \"./components/MovieInfoCard\"\n\nimport {CSSTransition} from \"react-transition-group\"\n\nexport default function App() {\n\n    \n\n    //conserving theme setting when page refresh or revisiting the website\n    if(!localStorage.getItem(\"theme\")){\n        localStorage.setItem(\"theme\" ,\"light\")\n    }\n    \n    //use the theme setting from the LocalStorage\n    const [theme,setTheme] = useState(localStorage.getItem(\"theme\"))\n    const [stcicky,setSticky] = useState(false)\n    const [details,setDetails] = useState(false)\n    const [chosen,setChosen] = useState(null) \n\n    const [search,setSearch] = useState(\"\")\n    const [type,setType] = useState(\"movie\")\n    const [page,setPage] = useState(1)\n\n\n    //when user change the theme also save it in LocalStorage\n    const changeTheme = () =>{\n        if(theme === \"dark\"){\n            setTheme(\"light\")\n            localStorage.setItem(\"theme\" ,\"light\")\n        }else{\n            setTheme(\"dark\")\n            localStorage.setItem(\"theme\" ,\"dark\")\n        }\n\n    }\n\n    //Movie DEtails\n    const Details = (e)=>{\n        setDetails(!details)\n        if(e.target.classList.contains(\"poster-container\")){\n            setDetails(true)\n            setChosen({id:e.target.id,type:e.target.dataset.type})\n        }else{\n            setDetails(false)\n        }\n    }\n    \n    //stick nav on scroll down\n    window.addEventListener(\"scroll\",()=>{\n        if(window.pageYOffset>130){\n            setSticky(true)\n        }else{\n            setSticky(false)\n        }\n    })\n\n    const changeHandle =(e)=>{\n        setSearch(e.target.value)\n        setDetails(false)\n        setPage(1)\n    }\n\n    const changeType = (e)=>{\n        setPage(1)\n        setDetails(false)\n        window.scrollTo(0,0)\n        if(e.target.dataset.type == \"movie\")\n            setType(\"movie\")\n        else{\n            setType(\"tv\")\n        }\n    }\n\n    document.addEventListener(\"scroll\",()=>{\n\n        const showcase = document.querySelector(\".showcase\")\n\n        if(showcase != null && window.scrollY + window.innerHeight >= showcase.clientHeight){\n            setPage(page+1)\n            \n        }\n    })\n\n    const home = ()=>{\n        setType(\"movie\")\n        setPage(1)\n        setSearch(\"\")\n        setDetails(false)\n        window.scrollTo(0,0)\n    }\n\n    return (\n        <themeContext.Provider value={{theme,changeTheme}} >\n            <div className=\"App\">\n                <div className={\"container container-\"+theme} >\n                    <div className=\"header\" > \n                        <HeaderSection variant={(stcicky || details)? \"sticky\" : \"\"}  \n                        onChange={changeHandle} search={search} \n                        type={type}\n                        onClick={changeType}\n                        home={home}\n                        />\n                    </div>\n                    <div className=\"content\">\n\n                        <CSSTransition \n                        in={details == false} \n                        unmountOnExit\n                        timeout={500} \n                        classNames=\"SC\" \n                        >\n                            <MovieShowCase onClick={Details} search={search} type={type} page={page}/>\n                        </CSSTransition>\n\n                        <CSSTransition \n                        in={details == true} \n                        unmountOnExit \n                        timeout={500} \n                        classNames=\"DT\" \n                        >\n                            <MovieInfoCard onClick={Details} chosen={chosen}/>\n                        </CSSTransition>\n\n                    </div>\n                </div>\n            </div>\n        </themeContext.Provider>\n    )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}